server:
  display-name: union
  context-path: /
  port: 8080

# logback配置
logging:
  config: classpath:logback-spring.xml

spring:
  datasource:
    # jdbc配置
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://113.106.202.51:3306/gt_union_ceshi?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&autoReconnect=true&failOverReadOnly=false
    username: root
    password: gt123456
    # druid连接池配置
    druid:
      initial-size: 5 #初始化大小
      min-idle: 5 #最小值
      max-active: 20 #最大值
      max-wait: 60000 #获取连接等待超时的时间（单位：毫秒），1分钟
      min-evictable-idle-time-millis: 300000 #一个连接在池中的最小生存时间（单位：毫秒），5分钟
      time-between-eviction-runs-millis: 60000 #检测关闭空闲连接的时间间隔（单位：毫秒），1分钟
      pool-prepared-statements: true #打开PSCache
      max-open-prepared-statements: 20 #每个连接上PSCache的大小
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 #打开mergeSql功能;慢SQL记录
      filter: stat,wall,log4j #监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      use-global-data-source-stat: true #合并多个DruidDataSource的监控数据
      validation-query: select 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
    # druid监控配置
      stat-view-servlet:
        url-pattern: /druid/*
        reset-enable: true
      web-stat-filter:
        url-pattern: /*
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico
      aop-patterns: com.gt.union.*.service.*

  # redis配置
  redis:
      password: gt@123456
      timeout: 1000
      database: 3
      pool:
        max-active: 50
        max-wait: -1
        max-idle: 20
        min-idle: 0
        #redis集群配置
      cluster:
        nodes: 113.106.202.51:6379,113.106.202.50:9379,113.106.202.54:9379
        max-attempts: 3
        max-redirects: 3
        #redis哨兵模式配置
      sentinel:
        nodes: 113.106.202.51:26379,113.106.202.50:29379,113.106.202.54:29379
        master: mymaster
  session:
       store-type: redis

#jdk 1.7 配置 哨兵地址须加redis:// 如redis://127.0.0.1:6379  redissson 稳定版本使用2.10.5
#jdk 1.8 配置 哨兵地址不须加redis:// 如127.0.0.1:6379  redissson 稳定版本使用3.5.5
#基于redis的分布式锁 redisson配置
redisson:
  master-name: mymaster
  password: gt@123456
  sentinel-addresses: redis://113.106.202.51:26379,redis://113.106.202.50:29379,redis://113.106.202.54:29379

# mybatis设置
mybatis:
  mapper-locations: classpath:mapper/*/*/*Mapper.xml
  type-aliases-package: com.gt.union.*.*.entity


######################## 全局配置 ########################



#访问资源URL
resource:
  url:
    prefix: http://192.168.3.41:9998/upload/
socket:
  url: https://socket.deeptel.com.cn
  key: "Union_Key_"
#企业短信通-密码

#域名
domain:
  df: duofriend.com

mq:
  uri: 183.47.242.4
  user: guest
  password: yf26609632


#队列转换器
exchange:
  union:
    exchange: union_exchange
#队列名称
queueName:
  union:
    queueName: union_routingKey_phone_message


#redis:
redisNamePrefix: "Union:"


redisSession:
  domainName: .yifriend.net
  cookiePath: /
  cookieName: WXMPJSESSIONID

#数据请求地址
wxmp:
   url: http://hz1.yifriend.net
   signkey: WXMP2017
   company: "多粉平台"

union:
  url: http://union.yifriend.net:7884
  encryptKey: CFCCBD99C12B62E52952EA90A931A01F
  signkey: SR36E9KIYDLIU1VB6WX20HCW494QL97T
wx:
  duofen:
    busId: 33
    appid: wxa6e320cadfaaf729

member:
  url: http://member.yifriend.net
  signkey: MV8MMFQUMU1HJ6F2GNH40ZFJJ7Q8LNVM

jxc:
  url: https://jxc.deeptel.com.cn
  account: erp_7
  pwd: 123456

